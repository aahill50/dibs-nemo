{
  "name": "nemo-mocha-factory",
  "version": "0.3.1",
  "description": "Mocha before/after functions for putting nemo into the global namespace",
  "main": "index.js",
  "scripts": {
    "test": "grunt"
  },
  "repository": {
    "type": "git",
    "url": "git@github.com:paypal/nemo-mocha-factory.git"
  },
  "keywords": [
    "Nemo",
    "Mocha",
    "NodeJS",
    "Selenium",
    "Automation"
  ],
  "author": {
    "name": "Matt Edelman"
  },
  "licenses": [
    {
      "type": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  ],
  "dependencies": {
    "lodash": "^2.4.0"
  },
  "devDependencies": {
    "mocha": "~1.10.0",
    "chai": "~1.6.0",
    "grunt": "~0.4.1",
    "grunt-simple-mocha": "~0.4.0",
    "grunt-contrib-jshint": "~0.7.1",
    "nemo": "^0.2.0"
  },
  "readme": "## nemo-mocha-factory\n\nMocha before/after functions for putting nemo into the global namespace\n\n[![Build Status](https://travis-ci.org/paypal/nemo-mocha-factory.svg?branch=master)](https://travis-ci.org/paypal/nemo-mocha-factory)\n\n### Usage\n\n```javascript\n/*global describe:true, it:true, before:true, after:true */\n\"use strict\";\n\nvar assert = require('assert'),\n\tnemoFactory = require('nemo-mocha-factory'),//require the module\n\tplugins = require('../config/nemo-plugins'),\n\tsetup = require('../data/setup').loginSpec,\n\tdata_driven = require(\"data-driven\");\n\ndescribe('nemo-user @loginSuite@loginFactory@ci-group2@', function () {\n\t//call the factory method, optionally with the Object argument seen below\n\tnemoFactory({\"plugins\": plugins, \"setup\": setup});\n\tdata_driven([\n\t\t{\"user\": \"nobank\"},\n\t\t{\"user\": \"nocc\"},\n\t\t{\"user\": \"ccandbank\"}\n\t], function () {\n\t\tit('should create two users and login with user account {user} @P3@', function (ctx, done) {\n\t\t\t//use nemo from the global namespace\n\t\t\tvar currentUser = nemo.user.users[ctx.user];\n\t\t\tnemo.driver.get(nemo.targetBaseUrl);\n\t\t\tnemo.view.login.login(currentUser.emailAddress, currentUser.password);\n\t\t\tnemo.view.login.logout().then(function () {\n\t\t\t\tnemo.screenshot.done(\"loginFactorySuccess-\" + ctx.user, done);\n\t\t\t}, function (err) {\n\t\t\t\tnemo.screenshot.doneError(\"loginFactoryError-\" + ctx.user, err, done);\n\t\t\t});\n\n\t\t});\n\t});\n});\n```\n\n### API\n\nThe nemo-mocha-factory module accepts a JSON argument, with the following possible top-level objects\n* plugins: JSON object representing any desired plugin setup. Please see: https://github.com/paypal/nemo-docs/blob/master/plugins.md\n* setup: JSON object to pass to the Nemo.setup routine. Please see: https://github.com/paypal/nemo#nemosetup\n* context: a local namespace to hang the nemo properties from. If this is not included, nemo will be registered to the global namespace\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/paypal/nemo-mocha-factory/issues"
  },
  "homepage": "https://github.com/paypal/nemo-mocha-factory",
  "_id": "nemo-mocha-factory@0.3.1",
  "_from": "nemo-mocha-factory@^0.3.1"
}
